---
- name: Set a temporary variable
  ansible.builtin.set_fact:
    lighthouse_path: "{{ lighthouse_default_binary_name }}-{{ ethereum.lighthouse.version }}-{{ ansible_architecture }}"

- name: Create tmp directory
  ansible.builtin.file:
    path: "{{ tmp_dir }}/{{ service_identifier }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Unarchive the binary
  vars:
    suffix_url: "{{ lighthouse_path }}-unknown-{{ ansible_system | lower }}-gnu.tar.gz"
  ansible.builtin.unarchive:
    src: "{{ ethereum.lighthouse.source_url }}/{{ ethereum.lighthouse.version }}/{{ suffix_url }}"
    dest: "{{ tmp_dir }}/{{ service_identifier }}"
    remote_src: true
    owner: root
    group: root
    mode: "0755"

- name: Copy binary file
  ansible.builtin.copy:
    src: "{{ tmp_dir }}/{{ service_identifier }}/{{ lighthouse_default_binary_name }}"
    dest: "{{ lighthouse_bin_dir }}/{{ service_identifier }}"
    remote_src: true
    owner: root
    group: root
    force: true
    mode: "0755"
  notify:
    - Restart service

- name: Clear tmp directory
  ansible.builtin.file:
    path: "{{ tmp_dir }}/{{ service_identifier }}"
    state: absent
